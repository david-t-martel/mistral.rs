{
  "timestamp": "2025-10-03 03:22:15",
  "servers": {
    "fileops": {
      "name": "Python FileOps Enhanced",
      "start_time": "2025-10-03 03:22:52",
      "type": "Python/uv",
      "pid": 51280,
      "command": "uv",
      "errors": [
        "Server exited immediately with code 2. Error: An extremely fast Python package manager.\n\nUsage: uv.exe [OPTIONS] <COMMAND>\n\nCommands:\n  run      Run a command or script\n  init     Create a new project\n  add      Add dependencies to the project\n  remove   Remove dependencies from the project\n  version  Read or update the project's version\n  sync     Update the project's environment\n  lock     Update the project's lockfile\n  export   Export the project's lockfile to an alternate format\n  tree     Display the project's dependency tree\n  format   Format Python code in the project\n  tool     Run and install commands provided by Python packages\n  python   Manage Python versions and installations\n  pip      Manage Python packages with a pip-compatible interface\n  venv     Create a virtual environment\n  build    Build Python packages into source distributions and wheels\n  publish  Upload distributions to an index\n  cache    Manage uv's cache\n  self     Manage the uv executable\n  help     Display documentation for a command\n\nCache options:\n  -n, --no-cache               Avoid reading from or writing to the cache, instead using a temporary\n                               directory for the duration of the operation [env: UV_NO_CACHE=]\n      --cache-dir <CACHE_DIR>  Path to the cache directory [env: UV_CACHE_DIR=]\n\nPython options:\n      --managed-python       Require use of uv-managed Python versions [env: UV_MANAGED_PYTHON=]\n      --no-managed-python    Disable use of uv-managed Python versions [env: UV_NO_MANAGED_PYTHON=]\n      --no-python-downloads  Disable automatic downloads of Python. [env:\n                             \"UV_PYTHON_DOWNLOADS=never\"]\n\nGlobal options:\n  -q, --quiet...\n          Use quiet output\n  -v, --verbose...\n          Use verbose output\n      --color <COLOR_CHOICE>\n          Control the use of color in output [possible values: auto, always, never]\n      --native-tls\n          Whether to load TLS certificates from the platform's native certificate store [env:\n          UV_NATIVE_TLS=]\n      --offline\n          Disable network access [env: UV_OFFLINE=]\n      --allow-insecure-host <ALLOW_INSECURE_HOST>\n          Allow insecure connections to a host [env: UV_INSECURE_HOST=]\n      --no-progress\n          Hide all progress outputs [env: UV_NO_PROGRESS=]\n      --directory <DIRECTORY>\n          Change to the given directory prior to running the command\n      --project <PROJECT>\n          Run the command within the given project directory [env: UV_PROJECT=]\n      --config-file <CONFIG_FILE>\n          The path to a `uv.toml` file to use for configuration [env: UV_CONFIG_FILE=]\n      --no-config\n          Avoid discovering configuration files (`pyproject.toml`, `uv.toml`) [env: UV_NO_CONFIG=]\n  -h, --help\n          Display the concise help for this command\n  -V, --version\n          Display the uv version\n\nUse `uv help` for more details.\n"
      ],
      "status": "FAILED",
      "tests": [],
      "end_time": "2025-10-03 03:22:57"
    },
    "rag_redis": {
      "name": "RAG-Redis",
      "start_time": "2025-10-03 03:22:57",
      "type": "Rust binary",
      "pid": 62224,
      "command": "C:/users/david/bin/rag-redis-mcp-server.exe",
      "errors": [],
      "status": "PASSED",
      "tests": [
        {
          "status": "PASSED",
          "message": "RAG-Redis server started successfully",
          "test": "Process running check"
        }
      ],
      "end_time": "2025-10-03 03:23:03"
    },
    "filesystem": {
      "name": "Filesystem",
      "start_time": "2025-10-03 03:22:20",
      "type": "bun-based",
      "pid": 54268,
      "command": "bun",
      "errors": [
        "Server exited immediately with code 0. Error: "
      ],
      "status": "FAILED",
      "tests": [],
      "end_time": "2025-10-03 03:22:25"
    },
    "serena": {
      "name": "Serena Claude",
      "start_time": "2025-10-03 03:22:47",
      "type": "Python/uv",
      "pid": 66928,
      "command": "uv",
      "errors": [
        "Server exited immediately with code 2. Error: An extremely fast Python package manager.\n\nUsage: uv.exe [OPTIONS] <COMMAND>\n\nCommands:\n  run      Run a command or script\n  init     Create a new project\n  add      Add dependencies to the project\n  remove   Remove dependencies from the project\n  version  Read or update the project's version\n  sync     Update the project's environment\n  lock     Update the project's lockfile\n  export   Export the project's lockfile to an alternate format\n  tree     Display the project's dependency tree\n  format   Format Python code in the project\n  tool     Run and install commands provided by Python packages\n  python   Manage Python versions and installations\n  pip      Manage Python packages with a pip-compatible interface\n  venv     Create a virtual environment\n  build    Build Python packages into source distributions and wheels\n  publish  Upload distributions to an index\n  cache    Manage uv's cache\n  self     Manage the uv executable\n  help     Display documentation for a command\n\nCache options:\n  -n, --no-cache               Avoid reading from or writing to the cache, instead using a temporary\n                               directory for the duration of the operation [env: UV_NO_CACHE=]\n      --cache-dir <CACHE_DIR>  Path to the cache directory [env: UV_CACHE_DIR=]\n\nPython options:\n      --managed-python       Require use of uv-managed Python versions [env: UV_MANAGED_PYTHON=]\n      --no-managed-python    Disable use of uv-managed Python versions [env: UV_NO_MANAGED_PYTHON=]\n      --no-python-downloads  Disable automatic downloads of Python. [env:\n                             \"UV_PYTHON_DOWNLOADS=never\"]\n\nGlobal options:\n  -q, --quiet...\n          Use quiet output\n  -v, --verbose...\n          Use verbose output\n      --color <COLOR_CHOICE>\n          Control the use of color in output [possible values: auto, always, never]\n      --native-tls\n          Whether to load TLS certificates from the platform's native certificate store [env:\n          UV_NATIVE_TLS=]\n      --offline\n          Disable network access [env: UV_OFFLINE=]\n      --allow-insecure-host <ALLOW_INSECURE_HOST>\n          Allow insecure connections to a host [env: UV_INSECURE_HOST=]\n      --no-progress\n          Hide all progress outputs [env: UV_NO_PROGRESS=]\n      --directory <DIRECTORY>\n          Change to the given directory prior to running the command\n      --project <PROJECT>\n          Run the command within the given project directory [env: UV_PROJECT=]\n      --config-file <CONFIG_FILE>\n          The path to a `uv.toml` file to use for configuration [env: UV_CONFIG_FILE=]\n      --no-config\n          Avoid discovering configuration files (`pyproject.toml`, `uv.toml`) [env: UV_NO_CONFIG=]\n  -h, --help\n          Display the concise help for this command\n  -V, --version\n          Display the uv version\n\nUse `uv help` for more details.\n"
      ],
      "status": "FAILED",
      "tests": [],
      "end_time": "2025-10-03 03:22:52"
    },
    "sequential_thinking": {
      "name": "Sequential Thinking",
      "start_time": "2025-10-03 03:22:25",
      "type": "bun-based",
      "pid": 61248,
      "command": "bun",
      "errors": [
        "Server exited immediately with code 0. Error: "
      ],
      "status": "FAILED",
      "tests": [],
      "end_time": "2025-10-03 03:22:30"
    },
    "fetch": {
      "name": "Fetch",
      "start_time": "2025-10-03 03:22:35",
      "type": "bun-based",
      "pid": 60928,
      "command": "bun",
      "errors": [
        "Server exited immediately with code 0. Error: "
      ],
      "status": "FAILED",
      "tests": [],
      "end_time": "2025-10-03 03:22:40"
    },
    "github": {
      "name": "GitHub",
      "start_time": "2025-10-03 03:22:30",
      "type": "bun-based",
      "pid": 37424,
      "command": "bun",
      "errors": [
        "Server exited immediately with code 0. Error: "
      ],
      "status": "FAILED",
      "tests": [],
      "end_time": "2025-10-03 03:22:35"
    },
    "time": {
      "name": "Time",
      "start_time": "2025-10-03 03:22:40",
      "type": "npx-based",
      "pid": 20120,
      "command": "npx",
      "errors": [],
      "status": "PASSED",
      "tests": [
        {
          "status": "PASSED",
          "message": "Time server (TheoBrigitte/mcp-time) started successfully",
          "test": "Process running check"
        }
      ],
      "end_time": "2025-10-03 03:22:47"
    },
    "memory": {
      "name": "Memory",
      "start_time": "2025-10-03 03:22:15",
      "type": "bun-based",
      "pid": 51536,
      "command": "bun",
      "errors": [
        "Server exited immediately with code 0. Error: "
      ],
      "status": "FAILED",
      "tests": [],
      "end_time": "2025-10-03 03:22:20"
    }
  },
  "phase": "Phase 2: MCP Server Testing",
  "summary": {
    "success_rate": 22.0,
    "skipped_servers": 0,
    "total_servers": 9,
    "failed_servers": 7,
    "passed_servers": 2
  }
}
