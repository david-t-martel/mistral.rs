#!/usr/bin/env bash
#
# Commit message hook for mistral.rs
# Validates commit messages follow conventional commits format
#
# To install: run scripts/setup/install-git-hooks.ps1
#
# Format: <type>(<scope>): <subject>
#
# Types: feat, fix, docs, style, refactor, perf, test, chore, ci, build
#
# Examples:
#   feat(core): add support for new model architecture
#   fix(server): resolve memory leak in request handling
#   docs(readme): update installation instructions
#

COMMIT_MSG_FILE=$1
COMMIT_MSG=$(cat "$COMMIT_MSG_FILE")

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Skip validation for merge commits
if grep -qE "^Merge " "$COMMIT_MSG_FILE"; then
    exit 0
fi

# Skip validation for revert commits
if grep -qE "^Revert " "$COMMIT_MSG_FILE"; then
    exit 0
fi

# Conventional commit pattern
# Format: type(scope): subject
PATTERN="^(feat|fix|docs|style|refactor|perf|test|chore|ci|build)(\(.+\))?: .{1,100}$"

if ! echo "$COMMIT_MSG" | grep -qE "$PATTERN"; then
    echo -e "${RED}ERROR: Invalid commit message format${NC}"
    echo ""
    echo "Commit messages must follow the Conventional Commits format:"
    echo ""
    echo "  <type>(<scope>): <subject>"
    echo ""
    echo "Types:"
    echo "  feat     - New feature"
    echo "  fix      - Bug fix"
    echo "  docs     - Documentation changes"
    echo "  style    - Code style changes (formatting, etc.)"
    echo "  refactor - Code refactoring"
    echo "  perf     - Performance improvements"
    echo "  test     - Test changes"
    echo "  chore    - Maintenance tasks"
    echo "  ci       - CI/CD changes"
    echo "  build    - Build system changes"
    echo ""
    echo "Examples:"
    echo "  feat(core): add support for Qwen3 models"
    echo "  fix(server): resolve CUDA memory leak"
    echo "  docs(readme): update build instructions"
    echo ""
    echo "Your commit message:"
    echo "  $COMMIT_MSG"
    echo ""
    exit 1
fi

# Check subject line length
SUBJECT_LINE=$(echo "$COMMIT_MSG" | head -n1)
SUBJECT_LENGTH=${#SUBJECT_LINE}

if [ $SUBJECT_LENGTH -gt 100 ]; then
    echo -e "${YELLOW}WARNING: Subject line is too long (${SUBJECT_LENGTH} > 100 characters)${NC}"
    echo "Consider making it more concise."
    echo ""
    # Don't block commit, just warn
fi

# Check for issue references (optional)
if ! echo "$COMMIT_MSG" | grep -qE "#[0-9]+|closes #[0-9]+|fixes #[0-9]+"; then
    echo -e "${YELLOW}INFO: No issue reference found in commit message${NC}"
    echo "Consider adding references like: #123, closes #456, fixes #789"
    echo ""
    # Don't block commit, just inform
fi

echo -e "${GREEN}âœ“ Commit message format is valid${NC}"
exit 0
